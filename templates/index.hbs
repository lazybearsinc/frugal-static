<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Costco Deals | Find the Best Savings at Your Local Warehouse</title>
    <meta name="description" content="Browse the latest Costco deals and instant savings. Find great discounts on groceries, electronics, home goods and more at your local Costco warehouse.">
<link rel="icon" type="image/png" sizes="32x32" href="/assets/icons/Android.png">
<link rel="icon" type="image/png" sizes="16x16" href="/assets/icons/Android.png">
<link rel="shortcut icon" type="image/png" href="/assets/icons/Android.png">
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-B4EX7LQ7V4"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-B4EX7LQ7V4');
    </script>
    <!-- Google AdSense -->
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7930233358759132"
         crossorigin="anonymous"></script>
    <script src="/js/warehouse-locator.js"></script>
    <link rel="stylesheet" href="/css/header-improvements.css">
    <style>
        {{> styles}}
        {{> deal_card_styles}}
        /* Ad container styles */
        .ad-unit-container {
            width: 100%;
            margin: 1.5rem 0;
            text-align: center;
            background: #f9f9f9;
            padding: 1rem;
            border-radius: 8px;
            min-height: 90px;
            overflow: hidden;
        }
        
        .deal-list-top-ad {
            margin: 2rem auto;
            max-width: 970px;
            min-height: 250px;
        }
        
        .deal-card-ad {
            grid-column: 1 / -1;
            margin: 2rem 0;
            min-height: 200px;
        }
        
        @media (max-width: 768px) {
            .deal-list-top-ad {
                min-height: 100px;
            }
            
            .deal-card-ad {
                min-height: 250px;
                margin: 1rem 0;
            }
        }
    </style>
</head>
<body>

<header>
    {{> navbar}}
    <div class="warehouse-header">
        <div class="warehouse-selector">
            <div class="current-warehouse">
                <svg width="28" height="28" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7z"/>
                    <circle cx="12" cy="9" r="2" fill="currentColor"/>
                </svg>
                <div class="warehouse-info">
                    <span class="warehouse-label">Select Your Warehouse</span>
                    <strong class="warehouse-address">Find deals at your local Costco</strong>
                </div>
            </div>
            <button class="change-warehouse" id="selectWarehouse">
                Select Location
            </button>
        </div>
    </div>
</header>


{{> deal_list_top_ad}}

<div class="filters">
    <div class="filter-group">
        <button class="filter-button active" data-filter="all">All Savings</button>
        <button class="filter-button" data-filter="range" data-min="0" data-max="10">$0-$10</button>
        <button class="filter-button" data-filter="range" data-min="10" data-max="50">$10-$50</button>
        <button class="filter-button" data-filter="range" data-min="50" data-max="Infinity">$50+</button>
    </div>
    <div class="filter-group">
        <button class="filter-button" data-sort="ending-soon">Ending Soon</button>
        <button class="filter-button" data-sort="highest-savings">Highest Savings</button>
    </div>
</div>

<main class="deals-grid">
    {{#each warehouse.deals}}
        <a href="/costco-deals/{{../warehouse.slug}}/{{this.slug}}" 
           class="deal-card" 
           data-savings="{{this.savingsValue}}" 
           data-days-left="{{this.daysLeft}}">
            <img src="{{this.imageUrl}}" 
                 alt="{{this.title}}" 
                 class="deal-image"
                 onerror="this.src='/images/placeholder.svg'">
            <div class="deal-content">
                <div class="deal-saving">Save {{this.savings}}</div>
                <h3 class="deal-title">{{this.title}}</h3>
                <div class="deal-meta">
                    <span class="expires">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                            <circle cx="12" cy="12" r="10"/>
                            <path d="M12 6v6l4 2"/>
                        </svg>
                        {{#if this.daysLeft}}
                            {{this.daysLeft}} days left
                        {{else}}
                            Ends {{this.endDate}}
                        {{/if}}
                    </span>
                    <span class="item-number">#{{this.itemNumber}}</span>
                </div>
            </div>
        </a>
        {{#if (and (not @first) (eq (mod @index 6) 5))}}
            {{> deal_card_ad}}
        {{/if}}
    {{/each}}
</main>


<script src="/js/enhanced-warehouse.js"></script>
{{!-- <script>
    const filterButtons = document.querySelectorAll('.filter-button');
const dealsGrid = document.querySelector('.deals-grid');

function sortDeals(criteria) {
    const dealCards = Array.from(dealsGrid.querySelectorAll('.deal-card'));
    if (criteria === 'ending-soon') {
        dealCards.sort((a, b) => parseInt(a.getAttribute('data-days-left')) - parseInt(b.getAttribute('data-days-left')));
    } else if (criteria === 'highest-savings') {
        dealCards.sort((a, b) => parseFloat(b.getAttribute('data-savings')) - parseFloat(a.getAttribute('data-savings')));
    }
    dealsGrid.innerHTML = '';
    dealCards.forEach(card => dealsGrid.appendChild(card));
}

filterButtons.forEach(button => {
    button.addEventListener('click', function() {
        filterButtons.forEach(btn => btn.classList.remove('active'));
        this.classList.add('active');

        const filterType = this.getAttribute('data-filter');
        const sortCriteria = this.getAttribute('data-sort');

        if (filterType === 'all') {
            document.querySelectorAll('.deal-card').forEach(card => card.style.display = '');
        } else if (filterType === 'range') {
            const min = parseFloat(this.getAttribute('data-min'));
            const max = this.getAttribute('data-max') === 'Infinity' ? Infinity : parseFloat(this.getAttribute('data-max'));
            document.querySelectorAll('.deal-card').forEach(card => {
                const savings = parseFloat(card.getAttribute('data-savings'));
                card.style.display = (savings >= min && savings < max) ? '' : 'none';
            });
        } else if (sortCriteria) {
            sortDeals(sortCriteria);
        }
    });
});

</script> --}}
<script>
        // Responsive ad placement
        function adjustAdPlacement() {
            const dealCards = document.querySelectorAll('.deal-card');
            const adContainers = document.querySelectorAll('.deal-card-ad');

            // Remove existing ads
            adContainers.forEach(ad => ad.remove());

            const isMobile = window.innerWidth <= 768;
            const adInterval = isMobile ? 3 : 6;

            dealCards.forEach((card, index) => {
                if (index > 0 && (index + 1) % adInterval === 0) {
                    // Create ad container
                    const adContainer = document.createElement('div');
                    adContainer.className = 'ad-unit-container deal-card-ad';
                    adContainer.setAttribute('data-ad-status', 'unfilled');

                    // Create ins element for AdSense
                    const ins = document.createElement('ins');
                    ins.className = 'adsbygoogle';
                    ins.style.display = 'block';
                    ins.setAttribute('data-ad-client', 'ca-pub-7930233358759132');
                    ins.setAttribute('data-ad-slot', '2522373517');
                    ins.setAttribute('data-ad-format', 'auto');
                    ins.setAttribute('data-full-width-responsive', 'true');

                    // Create fallback div
                    const fallback = document.createElement('div');
                    fallback.className = 'ad-fallback';
                    fallback.style.display = 'none';
                    fallback.textContent = 'No ad available';

                    // Append elements to container
                    adContainer.appendChild(ins);
                    adContainer.appendChild(fallback);

                    // Insert after the current card
                    card.parentNode.insertBefore(adContainer, card.nextSibling);

                    // Load the ad
                    try {
                        (adsbygoogle = window.adsbygoogle || []).push({});
                    } catch (e) {
                        console.error('Error loading ad:', e);
                        adContainer.setAttribute('data-ad-status', 'unfilled');
                    }
                }
            });
        }

    window.addEventListener('load', () => {
    adjustAdPlacement();
});
        // Adjust on resize
        let resizeTimer;
        window.addEventListener('resize', () => {
            clearTimeout(resizeTimer);
            resizeTimer = setTimeout(adjustAdPlacement, 250);
        });
    </script>
    
</body>
</html> 